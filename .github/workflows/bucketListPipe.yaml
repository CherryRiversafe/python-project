name: BucketList-tf

on:
  push:
    branches:
      - main
#    paths:
#      - terraform/**
  pull_request:
    branches:
      - main
#    paths:
#      - terraform/**

env:
  TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY }}
  TF_VAR_secret_key: ${{ secrets.AWS_SECRET_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  TF_VAR_DB_USERNAME: ${{ secrets.AWS_RDS_DB_USERNAME }}
  DOCKER_NAME: ${{secrets.DOCKER_ACCESS_TOKEN_NAME}}
  DOCKER_TOKEN: ${{secrets.DOCKER_ACCESS_TOKEN_KEY}}


jobs:
  terraform:
    name: "Terraform Infrastructure Management"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
   
  #   unit-test-backend:
  #     name: "Prepare python environment"
  #     runs-on: ubuntu-latest
  #     defaults:
  #       run:
  #         working-directory: ./backend
  #     jobs:
  #       test:
  #         runs-on: ubuntu-latest
  #         strategy:
  #           matrix:
  #             python-version: "3.13"
  #         steps:
  #           - uses: actions/checkout@v4
  #           - name: Set up Python ${{ python-version }}
  #             uses: actions/setup-python@v5
  #             with:
  #               python-version: ${{ python-version }}
  #               cache: "pip"
  #           - run: pip install -r requirements.txt
  #           - run: pytest test_api.py

    
  #   docker-backend:
  #     name: Build and Push Docker Image

  #     jobs:
  #       build:
  #         runs-on: ubuntu-latest
  #         steps:
  #           - uses: actions/checkout@v4
            
  #           - name: Set up Docker Buildx
  #             uses: docker/setup-buildx-action@v3
            
  #           - name: Login to Docker Hub
  #             uses: docker/login-action@v3
  #             with:
  #               username: ${{secret.DOCKER_ACCESS_TOKEN_NAME}}
  #               password: ${{ secret.DOCKER_ACCESS_TOKEN_KEY }}
            
  #           - name: Build and push
  #             uses: docker/build-push-action@v5
  #             with:
  #               context: .
  #               push: true
  #               tags: cherryriversafe/bucketlist-backend:latest


  # deploy-EKS:
  #   name: deploy docker image from registry to EKS
  #   jobs:
  #     deploy:
  #       runs-on: ubuntu-latest
  #       steps:
  #         - name: Checkout code
  #           uses: actions/checkout@v4

  #         - name: Configure AWS credentials
  #           uses: aws-actions/configure-aws-credentials@v4
  #           with:
  #             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
  #             aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
  #             aws-region: eu-west-2

  #         - name: Install and configure kubectl
  #           uses: aws-actions/amazon-eks-kubectl-action@v2
  #           with:
  #             cluster-name: bucketListBackend

  #         - name: Deploy to EKS
  #           run: |
  #             kubectl apply -f bucketList_k8s.yaml

  # deploy-frontend-s3:
  #   jobs:
  #     deploy:
  #       runs-on: ubuntu-latest
  #       steps:
  #         - name: Checkout code
  #           uses: actions/checkout@v3

  #         - name: Set up Node.js
  #           uses: actions/setup-node@v3
  #           with:
  #             node-version: 18

  #         - name: Install dependencies
  #           run: npm install

  #         - name: Build application
  #           run: npm run build
  #           env:
  #             VITE_APP_BASE_URL: ${{ secrets.bucket_list_url }}
  #             VITE_APP_ENVIRONMENT: production

  #         - name: Configure AWS credentials
  #           uses: aws-actions/configure-aws-credentials@v4.0.2
  #           with:
  #             aws-region: eu-west-2
  #             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
  #             aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}

  #         - name: Deploy to S3
  #           run: aws s3 sync ./dist/ s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete --region eu-west-2




                  
